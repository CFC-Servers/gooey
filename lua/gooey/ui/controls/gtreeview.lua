local PANEL = {}--[[	Events		ItemSelected (treeViewNode)		Fired when the selected tree view node changes.]]function PANEL:Init ()	self.Menu = nil	self.PopulationMode = "Static"	self.Populator = nil		Gooey.EventProvider (self)endfunction PANEL:AddNode (name)	local node = vgui.Create ("GTreeViewNode", self)		node:SetText (name)	node:SetParentNode (self)	node:SetRoot (self)		self:AddItem (node)	return nodeendfunction PANEL:GetChildCount ()	return #self:GetItems ()endfunction PANEL:GetMenu ()	return self.Menuendfunction PANEL:GetParentNode ()	return nilendfunction PANEL:GetPopulator ()	return self.Populatorendfunction PANEL:LayoutRecursive ()	self:InvalidateLayout ()endfunction PANEL:Remove ()	if self.Menu and		self.Menu:IsValid () then		self.Menu:Remove ()	end	_R.Panel.Remove (self)endfunction PANEL:RemoveNode (node)	self:RemoveItem (node)	self:InvalidateLayout ()endfunction PANEL:SetMenu (menu)	self.Menu = menuendfunction PANEL:SetPopulator (populator)	self.Populator = populatorendfunction PANEL:SetSelectedItem (node)	if self.m_pSelectedItem == node then		return	end	DTree.SetSelectedItem (self, node)	self:DispatchEvent ("ItemSelected", node)endfunction PANEL:SortChildren (sorter)	table.sort (self:GetItems (), sorter)	self:InvalidateLayout ()end-- Eventsfunction PANEL:DoClick (node)	self:DispatchEvent ("Click", node)endfunction PANEL:DoRightClick (node)	if self.Menu then		self.Menu:Open (node)	end	self:DispatchEvent ("RightClick", node)endfunction PANEL:OnMouseReleased (mouseCode)	self:SetSelectedItem (nil)	if mouseCode == MOUSE_RIGHT then		self:DoRightClick ()	endendvgui.Register ("GTreeView", PANEL, "DTree") 